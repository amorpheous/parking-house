@using Garage2.Models

@model Garage2.Models.ParkingVehicleEdit



@{
    ViewBag.Title = "Create";
}

<h1>Park Vehicle</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Register Vehicle</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Brand, new SelectList(Enum.GetValues(typeof(Brands))), new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VehicleType, new SelectList(Enum.GetValues(typeof(VehicleTypes))), new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.VehicleType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.VehicleTypeListId, "VehicleTypeListId", htmlAttributes: new { @class = "control -label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.VehicleTypeListId, Model.VehicleTypeListTest, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.DropDownList("VehicleTypeListId", null, htmlAttributes: new { @class = "form-control" })*@
        @Html.ValidationMessageFor(model => model.VehicleTypeListId, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control -label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CustomerId, Model.CustomerListTest, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.DropDownList("VehicleTypeListId", null, htmlAttributes: new { @class = "form-control" })*@
            @*@Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Color, new SelectList(Enum.GetValues(typeof(Colors))), new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FuelType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FuelType, new SelectList(Enum.GetValues(typeof(FuelTypes))), new { htmlAttributes = new { @class = "form-control" } })
            @*   @Html.EditorFor(model => model.FuelType, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.FuelType, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CheckInTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckInTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckInTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
